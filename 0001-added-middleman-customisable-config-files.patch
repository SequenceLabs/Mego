From b4aac4dfa91c2dab112d50de1ef8670dc2e94314 Mon Sep 17 00:00:00 2001
From: Nadhim Orfali <info@fenka.co.uk>
Date: Fri, 13 Jan 2012 17:31:39 +0000
Subject: [PATCH] added middleman customisable config files

---
 sequence-mego.sublime-project   |    8 ++
 sequence-mego.sublime-workspace |  222 +++++++++++++++++++++++++++++++++++++++
 sequence/config.rb              |   15 +++
 sequence/config.ru              |    4 +
 sequence/config.tt              |   69 ++++++++++++
 5 files changed, 318 insertions(+), 0 deletions(-)
 create mode 100644 sequence-mego.sublime-project
 create mode 100644 sequence-mego.sublime-workspace
 create mode 100644 sequence/config.rb
 create mode 100644 sequence/config.ru
 create mode 100644 sequence/config.tt

diff --git a/sequence-mego.sublime-project b/sequence-mego.sublime-project
new file mode 100644
index 0000000..938a50b
--- /dev/null
+++ b/sequence-mego.sublime-project
@@ -0,0 +1,8 @@
+{
+	"folders":
+	[
+		{
+			"path": "/D/Inetpub/wwwroot/sandbox-mego"
+		}
+	]
+}
diff --git a/sequence-mego.sublime-workspace b/sequence-mego.sublime-workspace
new file mode 100644
index 0000000..2ee38c9
--- /dev/null
+++ b/sequence-mego.sublime-workspace
@@ -0,0 +1,222 @@
+{
+	"auto_complete":
+	{
+		"selected_items":
+		[
+		]
+	},
+	"buffers":
+	[
+		{
+			"file": "sequence/source/index.html.haml",
+			"settings":
+			{
+				"buffer_size": 55,
+				"line_ending": "Windows"
+			}
+		}
+	],
+	"build_system": "",
+	"command_palette":
+	{
+		"height": 286.0,
+		"selected_items":
+		[
+			[
+				"git",
+				"Set Syntax: Git Blame"
+			],
+			[
+				"install",
+				"Package Control: Install Package"
+			],
+			[
+				"Package Control: ",
+				"Package Control: Discover Packages"
+			]
+		],
+		"width": 400.0
+	},
+	"console":
+	{
+		"height": 129.0
+	},
+	"distraction_free":
+	{
+		"menu_visible": true,
+		"show_minimap": false,
+		"show_open_files": false,
+		"show_tabs": false,
+		"side_bar_visible": false,
+		"status_bar_visible": false
+	},
+	"file_history":
+	[
+		"/D/Inetpub/wwwroot/sandbox-mego/sequence/source/index.html.haml",
+		"/c/Users/nadhim.orfali/.ssh/sequence-middleman-template/.git/COMMIT_EDITMSG",
+		"/C/MM/CHANGELOG.md",
+		"/C/MM/README",
+		"/C/Users/nadhim.orfali/.gitconfig",
+		"/D/Inetpub/wwwroot/sandbox-sequence/config.rb",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/css/_modules.scss",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/includes/structure/_site_nav.haml",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/includes/modules/mini_search/_mini_search.haml",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/includes/structure/_header.haml",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/css/lib/helpers/_classes.scss",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/css/style.scss",
+		"/C/Users/nadhim.orfali/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
+		"/C/Users/nadhim.orfali/AppData/Roaming/Sublime Text 2/Packages/Package Control/Package Control.sublime-settings",
+		"/C/Users/nadhim.orfali/AppData/Roaming/Sublime Text 2/Packages/Default/Global.sublime-settings",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/css/lib/layout/_grid_static.scss",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/css/lib/mixins/_mixins.scss",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/css/lib/_reset.scss",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/index.html.haml",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/layouts/layout.haml",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/includes/structure/_html_header.haml",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/includes/structure/_javascripts.haml",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/includes/structure/_footer.haml",
+		"/D/Inetpub/wwwroot/sandbox-sequence/config.tt",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/js/lib/3rdparty/modernizr.js",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/includes/modules/site_search/_mini_search.haml",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/js/lib/3rdparty/jquery.min.js",
+		"/D/Inetpub/wwwroot/sandbox-sequence/config.ru",
+		"/D/Inetpub/wwwroot/sandbox-sequence/sequence.rb",
+		"/D/Inetpub/wwwroot/sandbox-sequence/sequence/source/includes/structure/_javascripts.haml",
+		"/D/Inetpub/wwwroot/sandbox-sequence/sequence/source/layouts/layout.haml",
+		"/D/Inetpub/wwwroot/sandbox-sequence/source/includes/structure/_page_header.haml",
+		"//od1dep1.availis.dom/wwwroot/DiabloNETv1_1/waw2008/bank-locator.html",
+		"/C/xampp/htdocs/seqimage/.htaccess",
+		"/C/xampp/htdocs/seqimage/readme.txt",
+		"/C/xampp/htdocs/seqimage/code.php",
+		"/C/xampp/htdocs/seqimage/js/banner.js",
+		"/C/xampp/htdocs/seqimage/js/jquery.fancybox-1.3.1.pack.js",
+		"/C/xampp/htdocs/seqimage/js/jquery.global.js",
+		"/C/xampp/htdocs/seqimage/js/jquery.min.js",
+		"/C/xampp/htdocs/seqimage/js/cufon.js",
+		"/D/My Documents/_dumpground/rm/build/build/js/application.js"
+	],
+	"find":
+	{
+		"height": 32.0
+	},
+	"find_in_files":
+	{
+		"height": 0.0,
+		"where_history":
+		[
+		]
+	},
+	"find_state":
+	{
+		"case_sensitive": false,
+		"find_history":
+		[
+			"body"
+		],
+		"highlight": true,
+		"in_selection": false,
+		"preserve_case": false,
+		"regex": false,
+		"replace_history":
+		[
+		],
+		"reverse": false,
+		"show_context": true,
+		"use_buffer2": true,
+		"whole_word": false,
+		"wrap": true
+	},
+	"groups":
+	[
+		{
+			"selected": 0,
+			"sheets":
+			[
+				{
+					"buffer": 0,
+					"file": "sequence/source/index.html.haml",
+					"settings":
+					{
+						"buffer_size": 55,
+						"regions":
+						{
+						},
+						"selection":
+						[
+							[
+								55,
+								55
+							]
+						],
+						"settings":
+						{
+							"syntax": "Packages/Rails/Ruby Haml.tmLanguage"
+						},
+						"translation.x": 0.0,
+						"translation.y": 0.0,
+						"zoom_level": 1.0
+					},
+					"type": "text"
+				}
+			]
+		}
+	],
+	"incremental_find":
+	{
+		"height": 0.0
+	},
+	"input":
+	{
+		"height": 29.0
+	},
+	"layout":
+	{
+		"cells":
+		[
+			[
+				0,
+				0,
+				1,
+				1
+			]
+		],
+		"cols":
+		[
+			0.0,
+			1.0
+		],
+		"rows":
+		[
+			0.0,
+			1.0
+		]
+	},
+	"menu_visible": true,
+	"replace":
+	{
+		"height": 0.0
+	},
+	"save_all_on_build": true,
+	"select_file":
+	{
+		"height": 0.0,
+		"selected_items":
+		[
+		],
+		"width": 0.0
+	},
+	"select_project":
+	{
+		"height": 0.0,
+		"selected_items":
+		[
+		],
+		"width": 0.0
+	},
+	"show_minimap": true,
+	"show_open_files": false,
+	"show_tabs": true,
+	"side_bar_visible": true,
+	"side_bar_width": 247.0,
+	"status_bar_visible": true
+}
diff --git a/sequence/config.rb b/sequence/config.rb
new file mode 100644
index 0000000..0fe6a92
--- /dev/null
+++ b/sequence/config.rb
@@ -0,0 +1,15 @@
+class Middleman::Templates::Sequence < Middleman::Templates::Base
+  def self.source_root
+    File.join(File.dirname(__FILE__), 'sequence')
+
+  end
+  
+  def build_scaffold
+    template "config.tt", File.join(location, "config.rb")
+    template "config.ru", File.join(location, "config.ru")
+    directory "source", File.join(location, "source")
+  end
+end
+
+set :css_dir, "css"
+Middleman::Templates.register(:sequence, Middleman::Templates::Sequence)
\ No newline at end of file
diff --git a/sequence/config.ru b/sequence/config.ru
new file mode 100644
index 0000000..9820e4d
--- /dev/null
+++ b/sequence/config.ru
@@ -0,0 +1,4 @@
+require 'rubygems'
+require 'middleman'
+
+run Middleman::Server
\ No newline at end of file
diff --git a/sequence/config.tt b/sequence/config.tt
new file mode 100644
index 0000000..9845db1
--- /dev/null
+++ b/sequence/config.tt
@@ -0,0 +1,69 @@
+# Susy grids in Compass
+# First: gem install compass-susy-plugin
+# require 'susy'
+
+# CodeRay syntax highlighting in Haml
+# First: gem install haml-coderay
+# require 'haml-coderay'
+
+# CoffeeScript filters in Haml
+# First: gem install coffee-filter
+# require 'coffee-filter'
+
+# Automatic sitemaps
+# First: gem install middleman-slickmap
+# require "middleman-slickmap"
+# activate :slickmap
+
+# Automatic image dimension calculations
+# activate :automatic_image_sizes
+
+# Per-page layout changes
+# With no layout
+# page "/path/to/file.html", :layout => false
+# With alternative layout
+# page "/path/to/file.html", :layout => :otherlayout
+
+# Helpers
+# helpers do
+#   def some_helper(*args)
+#     "Helping"
+#   end
+# end
+
+# Change the CSS directory
+ set :css_dir, "css"
+
+
+# Change the JS directory
+ set :js_dir, "js"
+
+<% if options[:images_dir] != "images" -%>
+set :images_dir, "<%= options[:images_dir] -%>"
+<% else -%>
+# Change the images directory
+# set :images_dir, "alternative_image_directory"
+<% end -%>
+
+# Build-specific configuration
+configure :build do
+  # For example, change the Compass output style for deployment
+  # activate :minify_css
+  
+  # Minify Javascript on build
+  # activate :minify_javascript
+  
+  # Enable cache buster
+  # activate :cache_buster
+  
+  # Use relative URLs
+  # activate :relative_assets
+  
+  # Compress PNGs after build
+  # First: gem install middleman-smusher
+  # require "middleman-smusher"
+  # activate :smusher
+  
+  # Or use a different image path
+  # set :http_path, "/Content/images/"
+end
\ No newline at end of file
-- 
1.7.4.msysgit.0

